/* @import url('https://fonts.googleapis.com/css2?family=Figtree:wght@400;500;600&display=swap'); */ /* Removed, handled by next/font */

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* QuickFlow Brand Identity - OKLCH Based */
  --brand-quickflow-blue: lch(38.5% 0.24 278.5); /* User's preferred #3B4FDC */
  --brand-quickflow-purple-accent: lch(45% 0.26 290); /* For badge flash & highlights */
  --brand-quickflow-teal-support: lch(45% 0.1 210); /* Trust/Reliability supporting accent */

  /* Core Palette (OKLCH for Modernity & Accessibility) */
  --color-background: lch(98.5% 0.003 240); /* Base page background - very light, cool gray */
  --color-foreground: lch(15% 0.01 240);   /* Base text color - very dark, desaturated cool gray */
  
  --color-card: lch(100% 0 0); /* Card background - pure white for pop */
  --color-card-foreground: var(--color-foreground);

  --color-muted: lch(92% 0.007 240);          /* Muted backgrounds, subtle elements */
  --color-muted-foreground: lch(40% 0.015 240); /* Muted text */

  --color-border: lch(88% 0.01 240);           /* Subtle borders */
  --color-input: lch(95% 0.005 240);          /* Input field backgrounds */
  --color-ring: var(--brand-quickflow-blue);    /* Focus rings */

  /* Semantic Colors (Mapped to Tailwind config & shadcn/ui expectations) */
  --color-primary: var(--brand-quickflow-blue);
  --color-primary-foreground: lch(98% 0.01 280); /* Ensure high contrast text on primary */

  --color-secondary: var(--brand-quickflow-teal-support); /* Using teal as secondary for a calming, professional touch */
  --color-secondary-foreground: lch(98% 0.01 210);

  --color-accent: var(--brand-quickflow-purple-accent);
  --color-accent-foreground: lch(98% 0.01 290);
  
  --color-destructive: lch(55% 0.22 25); /* A clear, accessible red */
  --color-destructive-foreground: lch(98% 0.01 25);

  --color-success: lch(60% 0.18 150); /* A clear, accessible green */
  --color-success-foreground: lch(98% 0.01 150);
  
  --color-warning: lch(75% 0.2 80); /* A clear, accessible amber/yellow */
  --color-warning-foreground: lch(20% 0.1 80);

  --color-info: lch(70% 0.15 230); /* A clear, accessible blue for info */
  --color-info-foreground: lch(98% 0.01 230);

  /* Legacy/Tailwind Mappings (ensure compatibility with existing config) */
  --color-black: var(--color-foreground); /* Remap to new foreground */
  --color-white: lch(100% 0 0);
  --color-off-white: var(--color-background); /* Remap to new background */
  --color-light-gray: var(--color-muted);    /* Remap to new muted */
  
  --color-primary-accent: var(--color-primary);    /* From existing globals, now mapped */
  --color-secondary-accent: var(--color-accent); /* From existing globals, now mapped */
  --color-tertiary-accent: var(--brand-quickflow-teal-support); /* Can be a distinct teal */

  --color-soft-blue: lch(94% 0.03 278.5); /* Softer version of primary */
  --color-soft-teal: lch(94% 0.02 210);  /* Softer version of teal */
  --color-soft-purple: lch(94% 0.03 290); /* Softer version of accent purple */
  
  --color-brand-black: lch(10% 0.01 240); /* For very dark sections, e.g. footer */

  /* Typography */
  --font-primary: var(--font-figtree); /* From layout.tsx */
  /* Using existing responsive font sizes defined in @layer base */

  /* Spacing (Refined for 8pt grid, values are examples, Tailwind classes preferred) */
  /* Tailwind's spacing scale (0.5=2px, 1=4px, 1.5=6px, 2=8px, etc.) should be used directly. */
  /* These variables are for consistency if needed outside Tailwind's direct utilities. */
  --spacing-unit: 8px;
  --spacing-section-desktop: calc(var(--spacing-unit) * 10); /* 80px */
  --spacing-section-mobile: calc(var(--spacing-unit) * 6);  /* 48px */
  --spacing-element-lg: calc(var(--spacing-unit) * 4);    /* 32px */
  --spacing-element-md: calc(var(--spacing-unit) * 3);    /* 24px */
  --spacing-element-sm: calc(var(--spacing-unit) * 2);    /* 16px */
  --spacing-paragraph: calc(var(--spacing-unit) * 2);     /* 16px */
  
  --padding-button-y: calc(var(--spacing-unit) * 1.5);  /* 12px */
  --padding-button-x: calc(var(--spacing-unit) * 3);    /* 24px */
  
  --padding-container-desktop: calc(var(--spacing-unit) * 8); /* 64px, can be larger too */
  --padding-container-mobile: calc(var(--spacing-unit) * 2.5); /* 20px */
  
  --padding-card: calc(var(--spacing-unit) * 3); /* 24px, adjust as needed per card design */

  /* Borders & Shadows */
  --rounded-corners-small: 4px; 
  --rounded-corners-medium: 8px; /* Default for cards, buttons */
  --rounded-corners-large: 16px; /* For larger elements or hero card */
  --rounded-corners-full: 9999px; /* Pill shapes */

  --shadow-xs: 0 1px 2px 0 lch(0% 0 0 / 0.03);
  --shadow-sm: 0 1px 3px 0 lch(0% 0 0 / 0.07), 0 1px 2px -1px lch(0% 0 0 / 0.05);
  --shadow-md: 0 4px 6px -1px lch(0% 0 0 / 0.08), 0 2px 4px -2px lch(0% 0 0 / 0.05);
  --shadow-lg: 0 10px 15px -3px lch(0% 0 0 / 0.08), 0 4px 6px -4px lch(0% 0 0 / 0.05);
  --shadow-xl: 0 20px 25px -5px lch(0% 0 0 / 0.08), 0 8px 10px -6px lch(0% 0 0 / 0.05);
  --shadow-inner: inset 0 2px 4px 0 lch(0% 0 0 / 0.03);

  /* Added CSS variables for the pricing section design */
  --primary-bg: lch(98.5% 0.003 240);
  --primary-text: lch(15% 0.01 240);
  --secondary-text: lch(40% 0.01 240);
  --accent: var(--color-primary);
  --accent-light: lch(50% 0.24 278.5);
}

@layer base {
  html {
    @apply scroll-smooth antialiased; /* Added antialiased for smoother fonts */
    font-family: var(--font-primary);
    color: var(--color-foreground); /* Set base text color on html for better inheritance */
  }
  
  body {
    background-color: var(--color-background);
    @apply font-normal leading-relaxed; /* Default: Figtree weight 400, relaxed line height */
    /* line-height: 1.6; /* Overriding Tailwind's default normal (1.5) for body text */
  }
  
  /* Headings using responsive text utilities directly is often cleaner, but existing classes are kept for now */
  h1, .h1-style { /* Added .h1-style for semantic use on non-h1 elements */
    @apply text-[32px] sm:text-[38px] md:text-[44px] lg:text-[50px] font-semibold tracking-tight;
    line-height: 1.15;
    color: var(--color-foreground); /* Ensure headings use the main foreground */
  }
  
  h2, .h2-style {
    @apply text-[26px] sm:text-[30px] md:text-[34px] lg:text-[38px] font-semibold tracking-tight;
    line-height: 1.2;
     color: var(--color-foreground);
  }

  h3, .h3-style {
    @apply text-[22px] sm:text-[24px] md:text-[26px] font-medium; /* Reduced weight for h3 */
    line-height: 1.3;
     color: var(--color-foreground);
  }

  h4, .h4-style {
    @apply text-[18px] sm:text-[20px] font-medium;
    line-height: 1.4;
    color: var(--color-foreground);
  }
  
  p, body { 
    /* Updated to use Tailwind classes for responsive text where possible for body */
    @apply text-base md:text-lg; /* e.g. 16px on mobile, 18px on desktop */
    color: var(--color-muted-foreground); /* Body text uses muted-foreground for softer contrast */
    line-height: 1.65; /* Slightly increased for readability */
  }
  
  /* Strong / Bold */
  strong, b {
    @apply font-semibold;
    color: var(--color-foreground); /* Ensure strong text is prominent */
  }

  /* Links */
  a {
    @apply text-[var(--color-primary)] transition-colors duration-200 ease-in-out;
    text-decoration: none;
  }
  a:hover {
    @apply text-[var(--color-accent)]; /* Use accent for hover for more pop */
    text-decoration: underline;
  }
  
  /* Italic Highlight (as found in current page.tsx) */
  .italic-highlight {
    @apply italic font-semibold;
    color: var(--color-primary); /* Using new primary color */
  }
  
  /* Container - simplified, Tailwind's `container` class with center:true in config is good */
  /* Or use max-w- classes directly with px- on sections */
  .container-custom { 
    @apply w-full max-w-6xl mx-auto px-[var(--padding-container-mobile)] md:px-[var(--padding-container-desktop)];
  }
  
  .section-spacing {
    @apply py-[var(--spacing-section-mobile)] md:py-[var(--spacing-section-desktop)];
  }

  /* Subtle pulse animation for badges/highlights - using new color vars */
  @keyframes quickflow-badge-pulse {
    0%, 100% {
      background-color: var(--color-primary);
      box-shadow: 0 0 8px 0 lch(from var(--color-primary) l c h / 0.5);
    }
    50% {
      background-color: var(--color-accent);
      box-shadow: 0 0 12px 3px lch(from var(--color-accent) l c h / 0.5);
    }
  }
  
  .animate-quickflow-badge-pulse {
    animation: quickflow-badge-pulse 2.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  /* Fade-in animation (example, can be expanded) */
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }

  /* Add perspective and 3D transform style utilities */
  .perspective {
    perspective: 1000px;
  }
  .preserve-3d {
    transform-style: preserve-3d;
  }
  /* Rotation utilities (examples, can be expanded) */
  .-rotate-y-6 {
    transform: rotateY(-6deg);
  }
  .rotate-y-0 {
    transform: rotateY(0deg);
  }

  /* Animation delay utilities */
  .animation-delay-short { animation-delay: 150ms; }
  .animation-delay-medium { animation-delay: 300ms; }
  .animation-delay-long { animation-delay: 500ms; }
  .animation-delay-extra-long { animation-delay: 700ms; }
  /* Specific delays used in page.tsx for hero elements if needed */
  .animation-delay-2000 { animation-delay: 2000ms; } 
  .animation-delay-4000 { animation-delay: 4000ms; }
}

@layer components {
  /* Base Button Style - ensure it uses new variables and Tailwind focus-visible */
  .btn {
    @apply inline-flex items-center justify-center font-semibold 
           text-base 
           px-[var(--padding-button-x)] py-[var(--padding-button-y)] 
           rounded-[var(--rounded-corners-medium)] 
           transition-all duration-200 ease-in-out 
           focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-[var(--color-ring)] focus-visible:ring-offset-[var(--color-background)];
    /* Removed fixed text-[15px] from original .btn to allow for more flexible button text sizing if needed */
  }

  .btn-primary {
    @apply btn bg-[var(--color-primary)] text-[var(--color-primary-foreground)] hover:opacity-90 active:opacity-80;
    /* Example of a subtle transform on hover/active for "pop" */
    /* @apply hover:scale-[1.03] active:scale-[0.98]; */
  }
  
  .btn-secondary {
    @apply btn bg-transparent text-[var(--color-primary)] border-2 border-[var(--color-primary)] 
           hover:bg-[var(--color-soft-blue)] hover:border-[var(--color-primary)]
           active:bg-lch(from var(--color-soft-blue) l c h / 0.7);
  }

  .btn-accent {
    @apply btn bg-[var(--color-accent)] text-[var(--color-accent-foreground)] hover:opacity-90 active:opacity-80;
  }

  .btn-ghost {
    @apply btn bg-transparent text-[var(--color-primary)] hover:bg-[var(--color-soft-blue)] active:bg-lch(from var(--color-soft-blue) l c h / 0.7);
  }

  .btn-link {
    @apply text-[var(--color-primary)] hover:text-[var(--color-accent)] hover:underline font-medium;
  }
  
  /* Card Component - with new variables */
  .card {
    @apply bg-[var(--color-card)] text-[var(--color-card-foreground)] 
           p-[var(--padding-card)] 
           rounded-[var(--rounded-corners-large)] /* Slightly larger rounding for a modern feel */
           shadow-lg; /* Defaulting to a more noticeable shadow */
  }
  
  /* Feature Card Example (can be removed if not used, or adapted) */
  .feature-card {
    @apply card bg-[var(--color-soft-blue)] text-center;
    /* Add specific styles for feature cards if needed */
  }
  
  /* Badge Component - with new variables */
  .badge {
    @apply inline-flex items-center justify-center
           px-3 py-1 
           rounded-[var(--rounded-corners-full)] 
           text-xs font-semibold /* Semibold for better pop */
           leading-none;
  }
  
  .badge-primary {
    @apply badge bg-[var(--color-primary)] text-[var(--color-primary-foreground)];
  }
  
  .badge-secondary { /* Using accent for secondary badge as it's more vibrant */
    @apply badge bg-[var(--color-accent)] text-[var(--color-accent-foreground)];
  }

  .badge-outline {
    @apply badge bg-transparent text-[var(--color-primary)] border border-[var(--color-primary)];
  }

  .badge-soft {
    @apply badge bg-[var(--color-soft-blue)] text-[var(--color-primary)];
  }
  
  /* Input fields (basic styling example) */
  .input {
    @apply block w-full rounded-[var(--rounded-corners-medium)] border 
           border-[var(--color-border)] bg-[var(--color-input)] 
           px-3 py-2 text-sm 
           focus:border-[var(--color-primary)] focus:outline-none focus:ring-1 focus:ring-[var(--color-primary)];
  }

  /* Background grid patterns for the pricing section */
  .bg-grid-pattern {
    background-image: 
      linear-gradient(to right, rgba(0, 0, 0, 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(0, 0, 0, 0.05) 1px, transparent 1px);
    background-size: 30px 30px;
  }
  
  .bg-grid-small-pattern {
    background-image: 
      linear-gradient(to right, rgba(255, 255, 255, 0.07) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.07) 1px, transparent 1px);
    background-size: 20px 20px;
  }

  /* Animation for the subtle pulse effect on pricing card elements */
  @keyframes subtle-pulse {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 1; }
  }
  
  .animate-subtle-pulse {
    animation: subtle-pulse 3s ease-in-out infinite;
  }
}

/* Any remaining styles from old globals.css not covered above can be reviewed and migrated/removed */
/* For example, specific .text-accent, .text-on-dark etc. can be recreated if needed, */
/* or rely on Tailwind utilities with the new color palette. */
/* The old float animations are not included unless specifically requested for the new design. */

/* Add or update animations for pricing section */
@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes float-slow {
  0%, 100% {
    transform: translateY(0) scale(1);
    opacity: 0.6;
  }
  50% {
    transform: translateY(-15px) scale(1.05);
    opacity: 0.8;
  }
}

.animate-float {
  animation: float 5s ease-in-out infinite;
}

.animate-float-slow {
  animation: float-slow 15s ease-in-out infinite;
} 